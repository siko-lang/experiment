module Convert {

trait From[T, Source] {
    fn from(value: Source) -> T
}

trait Into[T, Target] {
    fn into(self) -> Target
}

instance[T, Source: Into[Source, T]] From[T, Source] {
    fn from(value: Source) -> T {
        value.into()
    }
}

instance[T] Into[T, T] {
    fn into(self) -> T {
        self
    }
}

}