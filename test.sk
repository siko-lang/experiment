module Main {

class Baz {

}

class Bar {
    baz: Baz,
    baz2: Baz,
}

class Foo {
    bar: Bar,
    bar2: Bar,

    fn stuff(mut self) -> Self {
        sink(self.bar);
        self.bar = Bar(Baz(), Baz());
        self
    }
}

fn sink[T](t: T) {}

fn main() {
    let mut f = Foo(Bar(Baz(), Baz()), Bar(Baz(), Baz()));
    sink(f.bar);
    f.bar.baz = Baz();
}

}