module Bool {

enum Bool {
    False,
    True,
}

}

module Main {

class Baz {

}

class Bar {
    baz: Baz,
    baz2: Baz,
}

enum Option[T] {
    Some(T),
    None,
}

class Foo {
}

fn sink[T](t: T) {}

fn main() {
    let a = Some(True);
    match a {
        Some(a) -> True,
        None -> False
    };
}

}