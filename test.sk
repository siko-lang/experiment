module Main {

class Foo {

}

trait Bar[T] {
    fn bar(self) -> ()
}

class Baz {

}

instance Bar[Baz] {
    fn bar(self) -> () {

    }
}

// instance Bar[Foo] {
//     fn bar(self) -> () {

//     }
// }

instance[T] Bar[T] {
    fn bar(self) -> () {

    }
}

instance[Q] Bar[Q] {
    fn bar(self) -> () {

    }
}

fn main() {
    let f = Foo();
    f.bar();
}

}