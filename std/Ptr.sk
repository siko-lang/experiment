module Ptr {

fn null[T]() -> *T = extern

fn allocateArray[T](count: Int) -> *T = extern

fn deallocate[T](addr: *T) = extern

fn memcpy[T](dest: *T, src: *T, count: Int) = extern

fn memcmp[T](dest: *T, src: *T, count: Int) -> Int = extern

fn offset[T](base: *T, count: Int) -> *T = extern

fn store[T](addr: *T, item: T) = extern

fn toRef[T](addr: *T) -> &T = extern

fn load[T](addr: *T) -> T = extern

fn print[T](addr: *T) = extern

fn clone[T](addr: &*T) -> *T = extern

}