module Bool {

@derive(PartialEq, Eq, PartialOrd, Ord, Show)
enum Bool {
    False,
    True

    fn not(self) -> Bool {
        match self {
            True -> False,
            False -> True,
        }
    }

    fn eq(self, other: Bool) -> Bool {
        match (self, other) {
            (True, True) -> True,
            (False, False) -> True,
            _ -> False,
        }
    }
}

}