module Int {

extern class Int {
    fn add(self, other: Int) -> Int = extern
    
    fn sub(self, other: Int) -> Int = extern

    fn eq(self, other: Int) -> Bool = extern

    fn lessThan(self, other: Int) -> Bool = extern
}

instance Std.Ops.Add[Int] {
    fn add(self, other: Int) -> Int {
        Int.add(self, other)
    }
}

}